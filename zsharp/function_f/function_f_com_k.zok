import "../hash/poseidon"
from "../curves/point" import Point
from "../curves/params" import CurveParams, VESTA_PARAMS

const u32 DOMAIN_SEPARATOR_HASH = 0
const u32 DOMAIN_SEPARATOR_COMMITMENT = 1
const u32 DOMAIN_SEPARATOR_SIGNATURE = 2
const u32 DOMAIN_SEPARATOR_PRF = 3

// open(com, r) = k
def generate_commitment(field com,  field r,  field k) -> field:
    field[2] com_inputs = [0; 2]
    com_inputs[0] = k
    com_inputs[1] = r

    field com_output = poseidon(com_inputs, DOMAIN_SEPARATOR_COMMITMENT)

    return com_output

// check open(com_k, r_com) = k
def main(private field com_k, private field k, private field r_com) -> field:
  field com_k_output = generate_commitment(com_k, r_com, k)

  field result = com_k_output - com_k // should be 0

  assert(result == 0)
  return result
